{
  "name": {
    "key": "PxPeSetName",
    "display": "PxPeSetName()"
  },
  "synopsis": [
    "PxError_t PxPeSetName (PxPe_t pe, const PxChar_t *buffer, PxUInt_t bufsize);"
  ],
  "arguments": [
    {
      "name": "pe",
      "description": "The periodic object to which the name will be set"
    },
    {
      "name": "buffer",
      "description": "Pointer to C string to be copied to the object's name"
    },
    {
      "name": "bufsize",
      "description": "Length of C string including the null character"
    }
  ],
  "retValues": ["PXROS-HR error code"],
  "errCodes": [
    "PXERR_NAME_BUFOVERFLOW - The name has been truncated",
    "PXERR_PROT_PERMISSION - The name is not readable for the calling task",
    "PXERR_SERVICE_NOT_CONFIGURED - Service has not been configured",
    "PXERR_OBJ_ILLOBJ - The passed periodic object handle is not valid",
    "PXERR_GLOBAL_ILLEGAL_CORE - The periodic object is not on the same core"
  ],

  "appliesTo": [
    {
      "ARM-CMX": ["1.0.0"],
      "TC23": ["8.2.0"]
    }
  ],
  "description": {
    "short": "Assign a name to a periodic object",
    "long": [
      {
        "type": "PP",
        "text": "PxPeSetName assigns a name to the periodic object `pe` by copying `bufsize` characters from memory pointed to by `buffer`. If the `bufzise` is grater than the internal buffer for the object name, the name is truncated. The name is null terminated."
      }
    ]
  },
  "seeAlso": [
    {
      "key": "PxPeGetName",
      "display": "PxPeGetName()"
    },
    {
      "key": "xref:chapter/section/Error_handling_services.adoc",
      "display": "Error Handling Services"
    }
  ],
  "usage": [
    "#include \"pxdef.h\"",
    "",
    "const char peName[18] = \"PERIODIC-OBJ-NAME\"; // 17 characters + null character",
    "",
    "PxError_t err = PxPeSetName(pe, peName, 18);",
    "",
    "if (err != PXERR_NOERROR) {",
    "    // Report error",
    "}",
    "",
    "char retPeName[18];",
    "",
    "PxError_t err = PxPeGetName(pe, retPeName, 18);",
    "",
    "if (err != PXERR_NOERROR) {",
    "    // Report error",
    "}"
  ]
}
